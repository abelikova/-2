/*flexberryautogenerated="true"*/

namespace IIS.Склад
{
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Web.Controls;
    using ICSSoft.STORMNET.Web.AjaxControls;
    using System.Web.UI.WebControls;
    using ICSSoft.STORMNET.FunctionalLanguage;
    using ICSSoft.STORMNET.FunctionalLanguage.SQLWhere;
    using ICSSoft.STORMNET.Web.Tools.Monads;
    using ICSSoft.STORMNET.Web.Tools.WOLVFeatures;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using ICSSoft.STORMNET.UserDataTypes;
    using ICSSoft.STORMNET.Web.Tools;
    using ICSSoft.STORMNET.Windows.Forms;
    using ICSSoft.STORMNET.Business;

    public partial class СкладE : BaseEditForm<Склад>
    {
        /// <summary>
        /// Конструктор формы.
        /// </summary>
        public СкладE()
            : base(Склад.Views.СкладE)
        {
        }

        /// <summary>
        /// Путь до формы.
        /// </summary>
        public static string FormPath
        {
            get { return "~/forms/Sklad/SkladE.aspx"; }
        }

        /// <summary>
        /// Вызывается самым первым в Page_Load.
        /// </summary>
        protected override void Preload()
        {
        }

        /// <summary>
        /// Здесь лучше всего писать бизнес-логику, оперируя только объектом данных.
        /// </summary>
        protected override void PreApplyToControls()
        {
            /*if (!IsPostBack && (DataObject == null || DataObject.GetStatus(true) == ObjectStatus.Created))
            {
                var langdef = ExternalLangDef.LanguageDef;
                var lcs = LoadingCustomizationStruct.GetSimpleStruct(typeof(Товар), Товар.Views.ТоварE);
                lcs.LimitFunction = langdef.GetFunction(langdef.funcEQ,
                                new VariableDef(langdef.GuidType, Information.ExtractPropertyPath<Товар>(x => x.__PrimaryKey)), "172E31C1-78A0-42BA-A8B4-3A5FDC682B61");
                var товар = DataServiceProvider.DataService.LoadObjects(lcs);

                var sklad = new Склад();
                var foots = new DetailArrayOfТоварНаСкладе(sklad)
                {
                     new ТоварНаСкладе { Количество = 10 },
                     //new ТоварНаСкладе { Товар = товар }
                };
                sklad.ТоварНаСкладе = foots;
                DataObject = sklad;
            }*/
        }

        /// <summary>
        /// Здесь лучше всего изменять свойства контролов на странице,
        /// которые не обрабатываются WebBinder.
        /// </summary>
        protected override void PostApplyToControls()
        {
            Page.Validate();
        }

        /// <summary>
        /// Вызывается самым последним в Page_Load.
        /// </summary>
        protected override void Postload()
        {
        }

        /// <summary>
        /// Валидация объекта для сохранения.
        /// </summary>
        /// <returns>true - продолжать сохранение, иначе - прекратить.</returns>
        protected override bool PreSaveObject()
        {
            return base.PreSaveObject();
        }

        /// <summary>
        /// Нетривиальная логика сохранения объекта.
        /// </summary>
        /// <returns>Объект данных, который сохранился.</returns>
        protected override DataObject SaveObject()
        {
            return base.SaveObject();
        }
    }
}